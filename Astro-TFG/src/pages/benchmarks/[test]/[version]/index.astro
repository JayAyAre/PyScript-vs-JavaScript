---
import { tests as testData } from '../../../../data/tests';
import VersionLayout from '../../../../layouts/VersionLayout.astro';
import '../../../../styles/global.css';

export const prerender = true;

export async function getStaticPaths() {
    const paths: { params: { test: string; version: string } }[] = [];
    for (const benchmark of testData) {
        const testName = benchmark.link;
        benchmark.tests.forEach((test, testIndex) => {
            test.versions.forEach((_, versionIndex) => {
                const versionId = `test-${testIndex + 1}-version-${versionIndex + 1}`;
                paths.push({ params: { test: testName, version: versionId } });
            });
        });
    }
    return paths;
}

const { test: testParam, version: versionParam } = Astro.params as {
    test: string;
    version: string;
};

const currentBenchmark = testData.find((b) => b.link === testParam);
if (!currentBenchmark) {
    throw new Error(`Benchmark no encontrado para ${testParam}`);
}
const [_, testNumStr, __, versionNumStr] = versionParam.split('-');
const testIndex = parseInt(testNumStr, 10) - 1;
const versionIndex = parseInt(versionNumStr, 10) - 1;

const test = currentBenchmark.tests[testIndex];
const rawVersion = test.versions[versionIndex];
if (!test || !rawVersion) {
    throw new Error(`Versi√≥n no encontrada para ${versionParam}`);
}

const version =
    typeof rawVersion === 'object' && 'version' in rawVersion
        ? (rawVersion as any).version
        : rawVersion;

const versionDir = `version-${versionNumStr}`;
const pruebaDir = `prueba-${testIndex + 1}`;
const basePublic = `/scripts/${testParam}/${pruebaDir}/${versionDir}`;
const jsPath = `${basePublic}/javascript/`;
let pyPath = `${basePublic}/python/`;

// if (version.pyConfig) {
//     if (version.pyConfig.endsWith('.json')) {
//         pyPath = `${basePublic}/json/`;
//     }else{
//         pyPath = `${basePublic}/python/`;
//     }
//     pyConfig = version.pyConfig;
// }

const jsLibs = Array.isArray(version.jsLibs) ? version.jsLibs : [];
---

<VersionLayout
    benchmarkTitle={currentBenchmark.title}
    testTitle={test.title}
    versionTitle={version.title}
    versionDescription={version.description}
    jsPath={jsPath}
    pyPath={pyPath}
    jsLibs={jsLibs}
    pyConfig={version.pyConfig}
    useNode={version.useNode}
    useBackend={version.useBackend}
    inputs={version.inputs}
    graph={version.graph}
/>
